[{"C:\\Users\\hp\\Desktop\\assign\\src\\index.js":"1","C:\\Users\\hp\\Desktop\\assign\\src\\App.js":"2","C:\\Users\\hp\\Desktop\\assign\\src\\navbar.js":"3","C:\\Users\\hp\\Desktop\\assign\\src\\content.js":"4","C:\\Users\\hp\\Desktop\\assign\\src\\signup.js":"5","C:\\Users\\hp\\Desktop\\assign\\src\\login.js":"6"},{"size":232,"mtime":1608838011433,"results":"7","hashOfConfig":"8"},{"size":179,"mtime":1608874003087,"results":"9","hashOfConfig":"8"},{"size":3459,"mtime":1608838365782,"results":"10","hashOfConfig":"8"},{"size":1228,"mtime":1608874003149,"results":"11","hashOfConfig":"8"},{"size":2411,"mtime":1608838365712,"results":"12","hashOfConfig":"8"},{"size":1813,"mtime":1608838011433,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"e6xsd8",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"16"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\hp\\Desktop\\assign\\src\\index.js",[],["29","30"],"C:\\Users\\hp\\Desktop\\assign\\src\\App.js",[],"C:\\Users\\hp\\Desktop\\assign\\src\\navbar.js",["31","32","33","34","35","36"],"import React, { useState } from \"react\";\r\nimport { FaBars } from \"react-icons/fa\";\r\nimport myWaysLogo from \"./asset/images/myways_logo.png\";\r\nimport dropdownarrow from \"./asset/images/Path 2.svg\";\r\nimport \"react-responsive-modal/styles.css\";\r\nimport { Modal } from \"react-responsive-modal\";\r\nimport LoginForm from \"./login\";\r\nimport SignUpForm from \"./signup\";\r\n\r\nconst Navbar = () => {\r\n  const [showLinks, setShowLinks] = useState(false);\r\n  const [showStateLogin, setShowStateLogin] = useState(false);\r\n\r\n  const onOpenModalLogin = () => {\r\n    setShowStateLogin(true);\r\n  };\r\n  const onCloseModalLogin = () => {\r\n    setShowStateLogin(false);\r\n  };\r\n  const [showDropdown, setShowDropdown] = useState(false);\r\n  const [showStateSignup, setShowStateSignup] = useState(false);\r\n\r\n  const onOpenModalSignup = () => {\r\n    setShowStateSignup(true);\r\n  };\r\n  const onCloseModalSignup = () => {\r\n    setShowStateSignup(false);\r\n  };\r\n  return (\r\n    <nav>\r\n      <div className=\"nav-center\">\r\n        <div className=\"nav-header\">\r\n          <img src={myWaysLogo} alt=\"myWays\" />\r\n          <button\r\n            className=\"nav-toggle\"\r\n            onClick={() => setShowLinks(!showLinks)}\r\n          >\r\n            <FaBars />\r\n          </button>\r\n        </div>\r\n        <div\r\n          className={`${\r\n            showLinks ? \"links-container show-container\" : \"links-container\"\r\n          }`}\r\n        >\r\n          <ul className=\"links\">\r\n            <li>\r\n              <a href=\"#\" onClick={() => setShowDropdown(!showDropdown)}>\r\n                For You\r\n                <span className=\"for-you\">\r\n                  <img src={dropdownarrow} />\r\n                </span>\r\n              </a>\r\n            </li>\r\n            <div\r\n              id=\"myDropdown\"\r\n              class={`${\r\n                showDropdown ? \"dropdown-content show\" : \"dropdown-content\"\r\n              }`}\r\n            >\r\n              <a href=\"#\">Find matching internship</a>\r\n              <a href=\"#\">Hire right talent</a>\r\n              <a href=\"#\">Work from Home</a>\r\n            </div>\r\n            <li>\r\n              <a href=\"/instant-apply\">\r\n                <span className=\"instant-apply\">Instant Apply</span>\r\n              </a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/pricing\">Pricing</a>\r\n            </li>\r\n            <li>\r\n              <a href=\"/about-us\">About us</a>\r\n            </li>\r\n            <li>\r\n              <a\r\n                href=\"#\"\r\n                className=\"sign-up\"\r\n                onClick={() => onOpenModalSignup()}\r\n              >\r\n                SIGN UP\r\n              </a>\r\n              <Modal\r\n                modalId=\"signup-modal\"\r\n                open={showStateSignup}\r\n                onClose={() => onCloseModalSignup()}\r\n                classNames=\"sign-up-modal\"\r\n              >\r\n                <SignUpForm />\r\n              </Modal>\r\n            </li>\r\n            <li>\r\n              <button\r\n                className=\"login-button\"\r\n                onClick={() => onOpenModalLogin()}\r\n              >\r\n                <h2>LOGIN</h2>\r\n              </button>\r\n              <Modal\r\n                modalId=\"login-modal\"\r\n                open={showStateLogin}\r\n                onClose={() => onCloseModalLogin()}\r\n              >\r\n                <LoginForm />\r\n              </Modal>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\hp\\Desktop\\assign\\src\\content.js",[],"C:\\Users\\hp\\Desktop\\assign\\src\\signup.js",[],"C:\\Users\\hp\\Desktop\\assign\\src\\login.js",["37"],"import React, { useState } from \"react\";\r\n\r\nconst LoginForm = () => {\r\n  const [login, setLogin] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const handleChange = (e) => {\r\n    const name = e.target.name;\r\n    const value = e.target.value;\r\n    setLogin({ ...login, [name]: value });\r\n  };\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (login.email && login.password) {\r\n      // const newsignup = { ...signup, id: new Date().getTime().toString() };\r\n      setLogin({ email: \"\", password: \"\" });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <form className=\"form\">\r\n        <h3>Login</h3>\r\n        <div className=\"box\">\r\n          <h3 className=\"login-heading\">Student</h3>\r\n          <hr className=\"student-line\" />\r\n          <div className=\"form-control\">\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              placeholder=\"Email\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"form-control\">\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              placeholder=\"Password\"\r\n              onChange={handleChange}\r\n            />\r\n          </div>\r\n          <div className=\"forgot-password-div\">\r\n            <a href=\"/forgot-password\" className=\"forgot-password\">\r\n              Forgot Password\r\n            </a>\r\n          </div>\r\n          <button type=\"submit\" onClick={handleSubmit}>\r\n            Login\r\n          </button>\r\n          <div className=\"new-to-myways-text-div\">\r\n            <a href=\"#\" className=\"new-to-myways-text\">\r\n              New to MyWays? Sign Up here\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":48,"column":15,"nodeType":"44","endLine":48,"endColumn":74},{"ruleId":"45","severity":1,"message":"46","line":51,"column":19,"nodeType":"44","endLine":51,"endColumn":46},{"ruleId":"42","severity":1,"message":"43","line":61,"column":15,"nodeType":"44","endLine":61,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":62,"column":15,"nodeType":"44","endLine":62,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":63,"column":15,"nodeType":"44","endLine":63,"endColumn":27},{"ruleId":"42","severity":1,"message":"43","line":77,"column":15,"nodeType":"44","endLine":81,"endColumn":16},{"ruleId":"42","severity":1,"message":"43","line":55,"column":13,"nodeType":"44","endLine":55,"endColumn":56},"no-native-reassign",["47"],"no-negated-in-lhs",["48"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]